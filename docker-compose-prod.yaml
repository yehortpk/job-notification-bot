x-args: 
  args: &project-args
    PROJECT_URL: git@github.com:yehortpk/job-notification-bot.git
    PROJECT_PATH: job-notification-bot

services:
  notifier:
    build:
      context: notifier
      dockerfile: prod.Dockerfile
      args: *project-args
    container_name: prod-notifier
    working_dir: /app
    volumes:
      - ./notifier/src:/app/src
      - ./notifier/build.gradle:/app/build.gradle
    networks:
      - ${PROD_NETWORK}
    ports:
      - "5006:5005"
    environment:
      KAFKA_NOTIFIER_TOPIC: vacancies
    env_file:
      - .env-prod
    profiles:
      - notifier
      - app

  router:
    build:
      context: router
      dockerfile: prod.Dockerfile
      args: *project-args
    container_name: prod-router
    working_dir: /app
    depends_on:
      - kafka
    networks:
      - ${PROD_NETWORK}
    ports:
      - "8080"
    environment:
      KAFKA_NOTIFIER_TOPIC: vacancies
      KAFKA_SUBSCRIBE_TOPIC: subscriptions
      KAFKA_BOT_NOTIFIER_TOPIC: bot-notifier
    env_file:
      - .env-prod
    profiles:
      - router
      - app
  
  subscriber-bot:
    build:
      context: subscriber-bot
      dockerfile: prod.Dockerfile
      args: *project-args
    container_name: prod-subscriber-bot
    working_dir: /app
    depends_on:
      - redis
    networks:
      - ${PROD_NETWORK}
    ports:
    - "5005:5005"
    environment:
      KAFKA_SUBSCRIBE_TOPIC: subscriptions
      KAFKA_BOT_NOTIFIER_TOPIC: bot-notifier
    env_file:
      - .env-prod
    profiles:
      - bot
      - app
  
  redis:
    image: redis:7.2.4
    container_name: prod-redis
    volumes:
      -  redis-prod-data:/data
    ports:
      - "6379"
    env_file:
    - .env-prod
    networks:
      - ${PROD_NETWORK}
    profiles:
      - app
      - bot
  
  kafka:
    image: bitnami/kafka:3.6.1
    container_name: prod-kafka
    volumes:
      -  kafka-prod-data:/bitnami/kafka
    ports:
      - "9092"
    networks:
      - ${PROD_NETWORK}
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER      
      - KAFKA_LOG4J_ROOT_LOGLEVEL=error
    env_file:
      - .env-prod
    profiles:
      - app
      - router
  
  mysql:
    image: mysql:8.3.0
    container_name: prod-mysql
    volumes:
      -  mysql-prod-data:/var/lib/mysql
      - ./notifier.sql:/docker-entrypoint-initdb.d/notifier.sql
    ports:
      - "3307:3306"
    networks:
      - ${PROD_NETWORK}
    environment:
      - MYSQL_DATABASE=notifier
      - MYSQL_ROOT_PASSWORD=${MYSQL_PROD_PASSWORD}
    env_file:
      - .env-prod
    profiles:
      - app

networks:
  app-prod-network:
    driver: bridge

volumes:
  kafka-prod-data:
  mysql-prod-data:
  redis-prod-data:
