services:
  project-builder:
    container_name: project-builder
    image: project-builder:latest
    build:
      context: ./
      dockerfile: docker/project-builder/builder-debug.Dockerfile
    profiles:
      - app
      - notifier
      - router
      - bot

  notifier:
    build:
      context: notifier
      dockerfile: debug.Dockerfile
    container_name: notifier
    environment:
      KAFKA_NOTIFIER_TOPIC: vacancies
    networks:
      - debug-network
    ports:
      - "5005:5005"
    profiles:
      - notifier
      - app
    depends_on:
      - project-builder

  router:
    image: project-builder:latest
    container_name: router
    environment:
      KAFKA_NOTIFIER_TOPIC: vacancies
      KAFKA_SUBSCRIBE_TOPIC: subscriptions
      KAFKA_BOT_NOTIFIER_TOPIC: bot-notifier
      MYSQL_USERNAME: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: ["java", "-jar", "/app/router-0.0.1-SNAPSHOT.jar"]
    networks:
      - debug-network
    ports:
      - "8080"
      - "5006:5005"
    profiles:
      - router
      - app
    depends_on:
      - kafka
      - mysql
      - project-builder

  subscriber-bot:
    image: project-builder:latest
    container_name: subscriber-bot
    environment:
      KAFKA_SUBSCRIBE_TOPIC: subscriptions
      KAFKA_BOT_NOTIFIER_TOPIC: bot-notifier
      TG_BOT_API_KEY: ${TG_BOT_API_KEY}
      TG_BOT_USERNAME: ${TG_BOT_USERNAME}
    command: ["java", "-jar", "/app/subscriber-bot-0.0.1-SNAPSHOT.jar"]
    networks:
      - debug-network
    ports:
      - "5007:5005"
    profiles:
      - bot
      - app
    depends_on:
      - project-builder
      - redis

  redis:
    image: redis:7.2.4
    container_name: redis
    volumes:
      -  redis-debug-data:/data
    ports:
      - "6379"
    networks:
      - debug-network
    profiles:
      - app
      - bot

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEPER_LOG4J_ROOT_LOGLEVEL: WARN
    ports:
      - 22181:2181
    networks:
      - debug-network

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092
    networks:
      - debug-network
    volumes:
      - kafka-debug-data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ZOOKEPER_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_LOG4J_LOGGERS: "kafka.controller=WARN,kafka.request.logger=WARN,kafka=WARN,kafka.log.LogCleaner=WARN,kafka.producer.async.DefaultEventHandler=WARN,state.change.logger=INFO"
    profiles:
      - app
      - router
      - notifier
      - bot

  mysql:
    image: mysql:8.3.0
    container_name: mysql
    volumes:
      -  mysql-debug-data:/var/lib/mysql
      - ./notifier.sql:/docker-entrypoint-initdb.d/notifier.sql
    ports:
      - "3306:3306"
    networks:
      - debug-network
    environment:
      MYSQL_DATABASE: notifier
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    profiles:
      - app
      - router

networks:
  debug-network:
    driver: bridge

volumes:
  kafka-debug-data:
  mysql-debug-data:
  redis-debug-data:
